#
# WARNING: this module is autogenerated. Do not edit this file!
#

from vortex.Tuple import addTupleType, Tuple, TupleField
from datetime import datetime
from typing import Optional, List

#
# Types
#{% for tp in types %}
{% if not tp.is_alias %}
@addTupleType
class {{ tp.class_name }}(Tuple):
    __tupleType__ = {{ tp.tupleType }}

    {%- for name, pyType, jsType, pyVal, jsVal in tp.fields %}
    {{ name }}: {{ pyType }}{{ pyVal }}
    {%- endfor %}

    soapFieldNameMap = {{ tp.soapFieldNameMap }}

{% endif %}{% endfor %}
{%- if circular_refs %}
# Client types contain circular references
Client.resolve_refs()
{%- endif -%}
